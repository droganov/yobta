{
  "name": "@yobta/validator",
  "version": "0.0.42",
  "description": "Tree-shakable es6 validator",
  "keywords": [
    "validator",
    "validator",
    "forms",
    "query"
  ],
  "scripts": {
    "build": "tsc --build tsconfig.build.json",
    "lint": "eslint src",
    "yaspeller": "yaspeller *.md",
    "size-limit": "size-limit",
    "test": "NODE_OPTIONS=--experimental-vm-modules jest src --coverage",
    "typecheck": "tsc --noEmit",
    "ncu": "ncu -u"
  },
  "author": "Sergei Droganov <serge@droganov.ru>",
  "license": "MIT",
  "repository": "yobta/yobta",
  "sideEffects": false,
  "type": "module",
  "types": "lib/index.d.ts",
  "exports": {
    ".": "./lib/index.js"
  },
  "engines": {
    "node": ">=16.0.0"
  },
  "publishConfig": {
    "access": "public"
  },
  "devDependencies": {
    "@babel/core": "^7.22.11",
    "@jest/globals": "^29.6.4",
    "@logux/eslint-config": "^51.0.1",
    "@size-limit/preset-small-lib": "^8.2.6",
    "@testing-library/dom": "^9.3.1",
    "@types/jest": "^29.5.4",
    "@types/jsdom": "^21.1.2",
    "@types/node": "^20.5.6",
    "@typescript-eslint/eslint-plugin": "^6.4.1",
    "@typescript-eslint/parser": "^6.4.1",
    "@vue/compiler-sfc": "^3.3.4",
    "clean-publish": "^4.2.0",
    "eslint": "^8.47.0",
    "eslint-config-standard": "^17.1.0",
    "eslint-plugin-es5": "^1.5.0",
    "eslint-plugin-import": "^2.28.1",
    "eslint-plugin-jest": "^27.2.3",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prefer-let": "^3.0.1",
    "eslint-plugin-promise": "^6.1.1",
    "eslint-plugin-security": "^1.7.1",
    "eslint-plugin-unicorn": "^48.0.1",
    "jest": "^29.6.4",
    "jest-environment-jsdom": "^29.6.4",
    "jest-mock": "^29.6.3",
    "lint-staged": "^14.0.1",
    "nanodelay": "^2.0.2",
    "npm-check-updates": "^16.13.1",
    "prettier": "^3.0.2",
    "simple-git-hooks": "^2.9.0",
    "size-limit": "^8.2.6",
    "ts-jest": "^29.1.1",
    "typescript": "^5.2.2",
    "yaspeller": "^8.0.1"
  },
  "simple-git-hooks": {
    "pre-commit": "npx lint-staged"
  },
  "prettier": {
    "arrowParens": "avoid",
    "jsxSingleQuote": false,
    "quoteProps": "consistent",
    "semi": false,
    "singleQuote": true,
    "trailingComma": "all"
  },
  "lint-staged": {
    "*.md": "yaspeller",
    "*.js": [
      "prettier --write",
      "eslint --fix"
    ],
    "*.ts": [
      "prettier --write",
      "eslint --fix"
    ]
  },
  "jest": {
    "preset": "ts-jest/presets/default-esm",
    "extensionsToTreatAsEsm": [
      ".ts"
    ],
    "testEnvironment": "jsdom",
    "moduleNameMapper": {
      "^(\\.{1,2}/.*)\\.js$": "$1"
    },
    "coverageThreshold": {
      "global": {
        "statements": 100
      }
    },
    "transform": {
      ".ts$": [
        "ts-jest",
        {
          "useESM": true
        }
      ]
    }
  },
  "eslintConfig": {
    "extends": "@logux/eslint-config/esm",
    "rules": {
      "@typescript-eslint/no-explicit-any": "off"
    },
    "globals": {
      "jsdom": false
    }
  },
  "eslintIgnore": [
    "**/errors.ts"
  ],
  "size-limit": [
    {
      "name": "Rule factory",
      "import": {
        "lib/index.js": "{ ruleYobta }"
      },
      "limit": "23 B"
    },
    {
      "name": "Validator factory",
      "import": {
        "lib/index.js": "{ yobta }"
      },
      "limit": "397 B"
    },
    {
      "name": "Async validator factory",
      "import": {
        "lib/index.js": "{ asyncYobta }"
      },
      "limit": "441 B"
    },
    {
      "name": "Sync validator factory",
      "import": {
        "lib/index.js": "{ syncYobta }"
      },
      "limit": "415 B"
    },
    {
      "name": "Shape rule",
      "import": {
        "lib/index.js": "{ shapeYobta }"
      },
      "limit": "591 B"
    },
    {
      "name": "String rule",
      "import": {
        "lib/index.js": "{ stringYobta }"
      },
      "limit": "162 B"
    },
    {
      "name": "Array rule",
      "import": {
        "lib/index.js": "{ arrayYobta }"
      },
      "limit": "176 B"
    },
    {
      "name": "Number rule",
      "import": {
        "lib/index.js": "{ numberYobta }"
      },
      "limit": "191 B"
    },
    {
      "name": "Integer rule",
      "import": {
        "lib/index.js": "{ integerYobta }"
      },
      "limit": "96 B"
    },
    {
      "name": "Date rule",
      "import": {
        "lib/index.js": "{ dateYobta }"
      },
      "limit": "127 B"
    },
    {
      "name": "Boolean rule",
      "import": {
        "lib/index.js": "{ booleanYobta }"
      },
      "limit": "209 B"
    },
    {
      "name": "Minimum items rule",
      "import": {
        "lib/index.js": "{ minItemsYobta }"
      },
      "limit": "139 B"
    },
    {
      "name": "Maximum items rule",
      "import": {
        "lib/index.js": "{ maxItemsYobta }"
      },
      "limit": "135 B"
    },
    {
      "name": "Minimum characters rule",
      "import": {
        "lib/index.js": "{ minCharactersYobta }"
      },
      "limit": "142 B"
    },
    {
      "name": "Maximum characters rule",
      "import": {
        "lib/index.js": "{ maxCharactersYobta }"
      },
      "limit": "137 B"
    },
    {
      "name": "Minimum rule",
      "import": {
        "lib/index.js": "{ minimumYobta }"
      },
      "limit": "93 B"
    },
    {
      "name": "Maximum rule",
      "import": {
        "lib/index.js": "{ maximumYobta }"
      },
      "limit": "93 B"
    },
    {
      "name": "Minimum date rule",
      "import": {
        "lib/index.js": "{ minDateYobta }"
      },
      "limit": "114 B"
    },
    {
      "name": "Maximum date rule",
      "import": {
        "lib/index.js": "{ maxDateYobta }"
      },
      "limit": "113 B"
    },
    {
      "name": "RegExp test rule",
      "import": {
        "lib/index.js": "{ testYobta }"
      },
      "limit": "91 B"
    },
    {
      "name": "Email rule",
      "import": {
        "lib/index.js": "{ emailYobta }"
      },
      "limit": "203 B"
    },
    {
      "name": "Required rule",
      "import": {
        "lib/index.js": "{ requiredYobta }"
      },
      "limit": "159 B"
    },
    {
      "name": "Default rule",
      "import": {
        "lib/index.js": "{ defaultYobta }"
      },
      "limit": "128 B"
    },
    {
      "name": "Catch rule",
      "import": {
        "lib/index.js": "{ catchYobta }"
      },
      "limit": "94 B"
    },
    {
      "name": "Items rule",
      "import": {
        "lib/index.js": "{ itemsYobta }"
      },
      "limit": "269 B"
    },
    {
      "name": "Unique rule",
      "import": {
        "lib/index.js": "{ uniqueYobta }"
      },
      "limit": "114 B"
    },
    {
      "name": "Identical rule",
      "import": {
        "lib/index.js": "{ identicalYobta }"
      },
      "limit": "180 B"
    },
    {
      "name": "Different rule",
      "import": {
        "lib/index.js": "{ differentYobta }"
      },
      "limit": "182 B"
    },
    {
      "name": "UrlSearchParams rule",
      "import": {
        "lib/index.js": "{ urlSearchParamsYobta }"
      },
      "limit": "145 B"
    },
    {
      "name": "Form rule",
      "import": {
        "lib/index.js": "{ formYobta }"
      },
      "limit": "237 B"
    },
    {
      "name": "Enum rule",
      "import": {
        "lib/index.js": "{ enumYobta }"
      },
      "limit": "118 B"
    },
    {
      "name": "Effect rule",
      "import": {
        "lib/index.js": "{ effectYobta }"
      },
      "limit": "43 B"
    },
    {
      "name": "Async shape rule",
      "import": {
        "lib/index.js": "{ awaitShapeYobta }"
      },
      "limit": "625 B"
    },
    {
      "name": "Await submit utility",
      "import": {
        "lib/index.js": "{ awaitSubmitYobta }"
      },
      "limit": "271 B"
    },
    {
      "name": "Errors utility",
      "import": {
        "lib/index.js": "{ errorsYobta }"
      },
      "limit": "66 B"
    },
    {
      "name": "Validity utility",
      "import": {
        "lib/index.js": "{ validityYobta }"
      },
      "limit": "340 B"
    },
    {
      "name": "Success utility",
      "import": {
        "lib/index.js": "{ successYobta }"
      },
      "limit": "54 B"
    },
    {
      "name": "Yobta error class",
      "import": {
        "lib/index.js": "{ YobtaError }"
      },
      "limit": "96 B"
    },
    {
      "name": "All",
      "import": {
        "lib/ruleYobta/index.js": "{ ruleYobta }",
        "lib/yobta/index.js": "{ yobta }",
        "lib/shapeYobta/index.js": "{ shapeYobta }",
        "lib/stringYobta/index.js": "{ stringYobta }",
        "lib/arrayYobta/index.js": "{ arrayYobta }",
        "lib/numberYobta/index.js": "{ numberYobta }",
        "lib/integerYobta/index.js": "{ integerYobta }",
        "lib/dateYobta/index.js": "{ dateYobta }",
        "lib/booleanYobta/index.js": "{ booleanYobta }",
        "lib/minItemsYobta/index.js": "{ minItemsYobta }",
        "lib/maxItemsYobta/index.js": "{ maxItemsYobta }",
        "lib/minCharactersYobta/index.js": "{ minCharactersYobta }",
        "lib/maxCharactersYobta/index.js": "{ maxCharactersYobta }",
        "lib/minimumYobta/index.js": "{ minimumYobta }",
        "lib/maximumYobta/index.js": "{ maximumYobta }",
        "lib/minDateYobta/index.js": "{ minDateYobta }",
        "lib/maxDateYobta/index.js": "{ maxDateYobta }",
        "lib/testYobta/index.js": "{ testYobta }",
        "lib/emailYobta/index.js": "{ emailYobta }",
        "lib/requiredYobta/index.js": "{ requiredYobta }",
        "lib/defaultYobta/index.js": "{ defaultYobta }",
        "lib/catchYobta/index.js": "{ catchYobta }",
        "lib/itemsYobta/index.js": "{ itemsYobta }",
        "lib/uniqueYobta/index.js": "{ uniqueYobta }",
        "lib/identicalYobta/index.js": "{ identicalYobta }",
        "lib/differentYobta/index.js": "{ differentYobta }",
        "lib/urlSearchParamsYobta/index.js": "{ urlSearchParamsYobta }",
        "lib/formYobta/index.js": "{ formYobta }",
        "lib/enumYobta/index.js": "{ enumYobta }",
        "lib/asyncYobta/index.js": "{ asyncYobta }",
        "lib/syncYobta/index.js": "{ syncYobta }",
        "lib/effectYobta/index.js": "{ effectYobta }",
        "lib/awaitShapeYobta/index.js": "{ awaitShapeYobta }",
        "lib/awaitSubmitYobta/index.js": "{ awaitSubmitYobta }",
        "lib/errorsYobta/index.js": "{ errorsYobta }",
        "lib/validityYobta/index.js": "{ validityYobta }",
        "lib/successYobta/index.js": "{ successYobta }",
        "lib/YobtaError/index.js": "{ YobtaError }",
        "lib/regularExpressions/index.js": "{ reSlugYobta, reEmailYobta }"
      },
      "limit": "2787 B"
    }
  ],
  "yaspeller": {
    "lang": "en",
    "ignoreCapitalization": true,
    "ignoreText": [
      " \\(by [^)]+\\).",
      "\\d+\\.\\d+ “[^”]+”"
    ],
    "dictionary": [
      "Yobta",
      "es6",
      "validator",
      "Sitnik",
      "Versioning",
      "async",
      "ajv",
      "js",
      "booleans",
      "FormData",
      "URLSearchParams",
      "Roadmap",
      "Async",
      "int",
      "minDate",
      "maxDate",
      "minLength",
      "maxLength",
      "isNot",
      "oneOf",
      "anyOf",
      "Ajv",
      "Yup",
      "formurai",
      "hydration",
      "serializers",
      "Calzaretta",
      "Schlinkert",
      "minItems",
      "maxItems",
      "minCharacters",
      "maxCharacters",
      "minValue",
      "maxValue",
      "YoptaScript",
      "JSDoc",
      "base64",
      "RegExp",
      "validation",
      "Dalton",
      "Enum",
      "awaitSubmitYobta",
      "errorsYobta",
      "successYobta",
      "regularExpressions",
      "src",
      "validityYobta",
      "SSR",
      "ESM",
      "yobta"
    ]
  }
}