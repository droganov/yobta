{
  "name": "yobta",
  "version": "0.0.1",
  "description": "Tree-shakable es6 validator",
  "keywords": [
    "validator",
    "validator",
    "forms",
    "query"
  ],
  "scripts": {
    "test": "node --experimental-vm-modules node_modules/.bin/jest --coverage && eslint . && check-dts && size-limit && yaspeller *.md"
  },
  "author": "Sergei Droganov <serge@droganov.ru>",
  "license": "MIT",
  "repository": "yobta/yobta",
  "sideEffects": false,
  "type": "module",
  "types": "./index.d.ts",
  "exports": {
    ".": "./index.js"
  },
  "engines": {
    "node": "^12.0.0 || ^14.0.0 || >=16.0.0"
  },
  "devDependencies": {
    "@babel/core": "^7.14.8",
    "@logux/eslint-config": "^45.4.6",
    "@logux/sharec-config": "^0.10.2",
    "@size-limit/preset-small-lib": "^5.0.1",
    "@testing-library/jest-dom": "^5.14.1",
    "@testing-library/preact": "^2.0.1",
    "@testing-library/react": "^12.0.0",
    "@testing-library/vue": "^6.4.0",
    "@types/jest": "^26.0.24",
    "@types/jsdom": "^16.2.13",
    "@types/node": "^16.4.2",
    "@types/react": "^17.0.15",
    "@types/react-dom": "^17.0.9",
    "@types/ws": "^7.4.7",
    "@typescript-eslint/eslint-plugin": "^4.28.4",
    "@typescript-eslint/parser": "^4.28.4",
    "@vue/compiler-sfc": "^3.1.5",
    "check-dts": "^0.5.4",
    "clean-publish": "^2.2.0",
    "eslint": "^7.31.0",
    "eslint-config-standard": "^16.0.3",
    "eslint-plugin-es5": "^1.5.0",
    "eslint-plugin-import": "^2.23.4",
    "eslint-plugin-jest": "^24.4.0",
    "eslint-plugin-node": "^11.1.0",
    "eslint-plugin-prefer-let": "^1.1.0",
    "eslint-plugin-promise": "^5.1.0",
    "eslint-plugin-security": "^1.4.0",
    "eslint-plugin-unicorn": "^34.0.1",
    "jest": "^27.0.6",
    "jest-localstorage-mock": "^2.4.14",
    "lint-staged": "^11.1.1",
    "nanodelay": "^2.0.0",
    "prettier": "^2.3.2",
    "simple-git-hooks": "^2.5.1",
    "size-limit": "^5.0.1",
    "ts-jest": "^27.0.4",
    "typescript": "^4.3.5",
    "yaspeller": "^7.0.0"
  },
  "simple-git-hooks": {
    "pre-commit": "npx lint-staged"
  },
  "prettier": {
    "arrowParens": "avoid",
    "jsxSingleQuote": false,
    "quoteProps": "consistent",
    "semi": false,
    "singleQuote": true,
    "trailingComma": "none"
  },
  "lint-staged": {
    "*.md": "yaspeller",
    "*.js": [
      "prettier --write",
      "eslint --fix"
    ],
    "*.ts": [
      "prettier --write",
      "eslint --fix"
    ]
  },
  "jest": {
    "preset": "ts-jest/presets/default-esm",
    "globals": {
      "ts-jest": {
        "useESM": true
      }
    },
    "testEnvironment": "jsdom",
    "coverageThreshold": {
      "global": {
        "statements": 100
      }
    },
    "setupFiles": [
      "jest-localstorage-mock"
    ]
  },
  "eslintConfig": {
    "extends": "@logux/eslint-config/esm",
    "rules": {
      "@typescript-eslint/no-explicit-any": "off"
    },
    "globals": {
      "jsdom": false
    }
  },
  "eslintIgnore": [
    "**/errors.ts"
  ],
  "size-limit": [
    {
      "name": "Rule factory",
      "import": {
        "./index.js": "{ createRule }"
      },
      "limit": "10 B"
    },
    {
      "name": "Validator factory",
      "import": {
        "./index.js": "{ syncYobta }"
      },
      "limit": "98 B"
    },
    {
      "name": "Is optional utility",
      "import": {
        "./index.js": "{ isOptional }"
      },
      "limit": "24 B"
    },
    {
      "name": "Is plain object utility",
      "import": {
        "./index.js": "{ isPlainObject }"
      },
      "limit": "191 B"
    },
    {
      "name": "Pipe utility",
      "import": {
        "./index.js": "{ pipe }"
      },
      "limit": "20 B"
    },
    {
      "name": "Pluralization utility for English",
      "import": {
        "./index.js": "{ pluralizeEn }"
      },
      "limit": "26 B"
    },
    {
      "name": "Shape rule",
      "import": {
        "./index.js": "{ shapeYobta }"
      },
      "limit": "381 B"
    },
    {
      "name": "String rule",
      "import": {
        "./index.js": "{ stringYobta }"
      },
      "limit": "122 B"
    },
    {
      "name": "Array rule",
      "import": {
        "./index.js": "{ arrayYobta }"
      },
      "limit": "69 B"
    },
    {
      "name": "Number rule",
      "import": {
        "./index.js": "{ numberYobta }"
      },
      "limit": "133 B"
    },
    {
      "name": "Integer rule",
      "import": {
        "./index.js": "{ integerYobta }"
      },
      "limit": "75 B"
    },
    {
      "name": "Date rule",
      "import": {
        "./index.js": "{ dateYobta }"
      },
      "limit": "83 B"
    },
    {
      "name": "Boolean rule",
      "import": {
        "./index.js": "{ booleanYobta }"
      },
      "limit": "154 B"
    },
    {
      "name": "Minimum items rule",
      "import": {
        "./index.js": "{ minItemsYobta }"
      },
      "limit": "102 B"
    },
    {
      "name": "All",
      "import": {
        "./createRule/index.js": "{ createRule }",
        "./syncYobta/index.js": "{ syncYobta }",
        "./isOptional/index.js": "{ isOptional }",
        "./isPlainObject/index.js": "{ isPlainObject }",
        "./pipe/index.js": "{ pipe }",
        "./pluralizeEn/index.js": "{ pluralizeEn }",
        "./shapeYobta/index.js": "{ shapeYobta }",
        "./stringYobta/index.js": "{ stringYobta }",
        "./arrayYobta/index.js": "{ arrayYobta }",
        "./numberYobta/index.js": "{ numberYobta }",
        "./integerYobta/index.js": "{ integerYobta }",
        "./dateYobta/index.js": "{ dateYobta }",
        "./booleanYobta/index.js": "{ booleanYobta }",
        "./minItemsYobta/index.js": "{ minItemsYobta }"
      },
      "limit": "1000 B"
    }
  ],
  "yaspeller": {
    "lang": "en",
    "ignoreCapitalization": true,
    "ignoreText": [
      " \\(by [^)]+\\).",
      "\\d+\\.\\d+ “[^”]+”"
    ],
    "dictionary": [
      "Yobta",
      "es6",
      "validator",
      "Sitnik",
      "Versioning",
      "async",
      "ajv",
      "js",
      "booleans",
      "FormData",
      "URLSearchParams",
      "Roadmap",
      "Async",
      "int",
      "minDate",
      "maxDate",
      "minLength",
      "maxLength",
      "isNot",
      "oneOf",
      "anyOf",
      "Ajv",
      "Yup",
      "formurai",
      "hydration",
      "serializers",
      "Calzaretta",
      "Schlinkert",
      "minItems",
      "maxItems",
      "minCharacters",
      "maxCharacters",
      "minValue",
      "maxValue",
      "validation"
    ]
  },
  "sharec": {
    "config": "@logux/sharec-config",
    "version": "0.10.2"
  }
}
